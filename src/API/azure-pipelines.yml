trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - src/UI
      - README.md

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  system.debug: 'true'

stages:
- stage: Analyze
  displayName: SonarCloud Analysis Stage
  jobs:
  - job: SonarCloudAnalyze
    displayName: Run SonarCloud Analysis
    steps:
    - checkout: self
      fetchDepth: 0
    
    - task: VisualStudioTestPlatformInstaller@1
      inputs:
        packageFeedSelector: 'nugetOrg'
        versionSelector: 'latestStable'

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
    - task: NuGetToolInstaller@1
      inputs:
        checkLatest: true

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/WebApi.csproj'
        feedsToUse: 'select'
    - task: SonarCloudPrepare@3
      displayName: Prepare
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'petar1808'
        scannerMode: 'dotnet'
        projectKey: 'petar1808_farmerapi'
        projectName: 'FarmerAPI'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/WebApi.csproj'
        arguments: '/nr:false'

    - task: VSTest@3
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\bin\**\*test.dll
          **\bin\**\*tests.dll
        searchFolder: '$(System.DefaultWorkingDirectory)\src\API'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'XUnit'
        testResultsFiles: '**/TEST-*.xml'
        searchFolder: '$(Agent.TempDirectory)\TestResults'
        
    - task: SonarCloudAnalyze@3
      displayName: 'Run SonarCloud Analysis'
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
    - task: SonarCloudPublish@3
      displayName: 'Publish'
      inputs:
        pollingTimeoutSec: '300'
      
- stage: Build
  displayName: Build and Publish Stage
  dependsOn: Analyze
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'],'refs/heads/main'), startsWith(variables['Build.SourceBranch'],'refs/heads/release/')))
  pool:
    vmImage: 'ubuntu-latest'
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/WebApi.csproj'
        feedsToUse: 'select'
    
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/WebApi.csproj'
        arguments: '--no-restore --configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish $(buildConfiguration)'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'WebApi'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-restore'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'publish artifacts'
