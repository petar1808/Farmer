trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - WebUI

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  testConfiguration: 'Debug'

stages:

- stage: Analyze
  displayName: SonarCloud Analysis Stage
  jobs:
  - job: SonarCloudAnalyze
    displayName: Run SonarCloud Analysis
    steps:
    - task: SonarCloudPrepare@3
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'petar1808'
        scannerMode: 'dotnet'
        projectKey: 'petar1808_farmerapi'
        projectName: 'Farmer'
        extraProperties: |
          sonar.sources=WebApi,Domain,Application,Infrastructure
          sonar.exclusions=Infrastructure/Persistence/Migrations/**/*,WebUI
          sonar.pullrequest.base=main

    - script: dotnet restore WebApi
      displayName: 'dotnet restore'

    - script: dotnet build WebApi --configuration $(testConfiguration) --no-restore
      displayName: 'dotnet build for SonarCloud'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: '**/**.csproj'
        arguments: '--configuration $(testConfiguration) --no-build --no-restore'
      continueOnError: false

    - task: SonarCloudAnalyze@3
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
      displayName: 'Run SonarCloud Analysis'

    - task: SonarCloudPublish@3
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish'

- stage: Build
  displayName: Build and Publish Stage
  dependsOn: Analyze
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'],'refs/heads/main'), startsWith(variables['Build.SourceBranch'],'refs/heads/release/')))
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - script: dotnet restore WebApi
      displayName: 'dotnet restore'
    - script: dotnet build  WebApi --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish $(buildConfiguration)'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'WebApi'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'publish artifacts'
