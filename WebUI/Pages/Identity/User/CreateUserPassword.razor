@page "/createUserPassword"
@using Microsoft.AspNetCore.WebUtilities
@using WebUI.Services.Identity
@using WebUI.ServicesModel.Identity
@inject NavigationManager NavManager
@layout EmptyLayout

<RadzenTemplateForm TItem="CreateUserPasswordModel" Data=@CreateUserPasswordModel Submit=@OnSubmit>
    <RadzenFieldset>
        <div class="row mb-3">
            <div class="col-md-6">
                <RadzenLabel Text="Имейл" />
            </div>
            <div class="col-md-6">
                <RadzenPassword style="display: block" Name="Password" @bind-Value=@CreateUserPasswordModel.Password Class="w-100" />
            </div>
        </div>
        <div class="row mb-1">
            <div class="col-md-2">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Добави"></RadzenButton>
            </div>
        </div>
    </RadzenFieldset>
</RadzenTemplateForm>


@code {
    private string _email;
    private string _token;

    bool popup;

    [Inject]
    public IIdentityService IdentityService { get; set; } = default!;

    public CreateUserPasswordModel CreateUserPasswordModel { get; set; } = default!;

    protected override void OnInitialized()
    {


        var createPasswordUrl = $"{NavManager.Uri}";
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        if (queryStrings.TryGetValue("email", out var email))
        {
            _email = email;
        }

        if (queryStrings.TryGetValue("token", out var token))
        {
            _token = token;
        }


        CreateUserPasswordModel = new CreateUserPasswordModel();
    }

    protected async Task OnSubmit(CreateUserPasswordModel createUserPasswordModel)
    {
        CreateUserPasswordModel.Email = _email;
        CreateUserPasswordModel.Token = _token;
        await IdentityService.CreateUserPassword(CreateUserPasswordModel);

        NavManager.NavigateTo("https://localhost:7265/login");
    }
}
