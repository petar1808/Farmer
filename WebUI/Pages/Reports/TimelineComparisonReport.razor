@page "/report/timeline"
@using WebUI.Services.Reports
@using WebUI.ServicesModel.Reports

@if (Data is null)
{
    <Loader />
}
else
{
        <RadzenCard class="rz-mb-6">
            <RadzenTemplateForm TItem="TimelineComparisonReportModel">
            <RadzenStack Orientation="Orientation.Horizontal" 
                         AlignItems="AlignItems.Center" 
                         JustifyContent="JustifyContent.SpaceBetween" 
                         Gap="0.5rem">
                <RadzenStack Orientation="Orientation.Horizontal" 
                             AlignItems="AlignItems.Center" 
                             JustifyContent="JustifyContent.Start">
                        <RadzenFormField Text="Първа земя за сравнение" Variant="Variant.Flat">
                            <ChildContent>
                            <RadzenDropDown Data=@data TValue="MyObject" @bind-Value=@singleValue
                                            AllowClear="true" AllowFiltering="true" Style="width: 100%; min-width: 300px;" Name="DropDownCustomObjects">
                            </RadzenDropDown>
                            </ChildContent>
                        </RadzenFormField>
                        <RadzenFormField Text="Втора земя за сравнение" Variant="Variant.Flat">
                            <ChildContent>
                                <RadzenDropDown Data=@data TValue="MyObject" @bind-Value=@singleValue
                                                AllowClear="true" AllowFiltering="true" Style="width: 100%; min-width: 300px;" Name="DropDownCustomObjects">
                                </RadzenDropDown>
                            </ChildContent>
                        </RadzenFormField>
                    </RadzenStack>
                    <RadzenStack Orientation="Orientation.Horizontal" 
                                 AlignItems="AlignItems.Center" 
                                 JustifyContent="JustifyContent.End">
                        <RadzenButton ButtonStyle="ButtonStyle.Primary" 
                                      Variant="Variant.Flat" 
                                      ButtonType="ButtonType.Submit" 
                                      Size="ButtonSize.Large"
                                      Icon="refresh" 
                                      Text="Генерирай" />
                    </RadzenStack>
                </RadzenStack>
            </RadzenTemplateForm>
        </RadzenCard>

        <RadzenCardGroup class="rz-mb-2" Responsive=true>
            <RadzenCard Variant="Variant.Filled">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">
                    <RadzenText TextStyle="TextStyle.H6"><strong>Земя 1, Година: 2024/2025</strong></RadzenText>
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Vertical" Gap="1rem" class="rz-p-4">
                    <RadzenStack Gap="0">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Засято семе</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>Царевица</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Засято кол. на декар</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>20 кг</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Ожънато кол на декар</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>60 кг</b></RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
            <RadzenCard Variant="Variant.Filled">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">
                    <RadzenText TextStyle="TextStyle.H6"><strong>Земя 1, Година: 2024/2025</strong></RadzenText>
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Vertical" Gap="1rem" class="rz-p-4">
                    <RadzenStack Gap="0">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Засято семе</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>Царевица</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Засято кол. на декар</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>20 кг</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Ожънато кол на декар</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>60 кг</b></RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
        </RadzenCardGroup>

        <RadzenCardGroup class="rz-mb-2" Responsive=true>
            <RadzenCard Variant="Variant.Filled">
                <RadzenTimeline AlignItems="AlignItems.Center"
                                Orientation="Orientation.Vertical"
                                LinePosition="LinePosition.Center"
                                style="max-width: 600px;margin: 0 auto;">
                    <Items>
                        @foreach (var arableLand in Data.ArableLand1)
                        {
                            <RadzenTimelineItem>
                                <PointContent><RadzenIcon Icon="@arableLand.Icon" /></PointContent>
                                <LabelContent>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-m-0 rz-color-primary">
                                        @arableLand.Date
                                    </RadzenText>
                                </LabelContent>
                                <ChildContent>
                                    <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-m-0">@arableLand.Type</RadzenText>
                                        @arableLand.Value
                                    @arableLand.AdditionalValue
                                </ChildContent>
                            </RadzenTimelineItem>
                        }
                    </Items>
                </RadzenTimeline>
            </RadzenCard>
            <RadzenCard Variant="Variant.Filled">
                <RadzenTimeline AlignItems="AlignItems.Center"
                                Orientation="Orientation.Vertical"
                                LinePosition="LinePosition.Center"
                                style="--rz-timeline-line-color: var(--rz-info);max-width: 600px;margin: 0 auto;">
                    <Items>
                        @foreach (var arableLand in Data.ArableLand2)
                        {
                            <RadzenTimelineItem>
                                <PointContent><RadzenIcon Icon="@arableLand.Icon" /></PointContent>
                                <LabelContent>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" class="rz-m-0 rz-color-primary">
                                        @arableLand.Date
                                    </RadzenText>
                                </LabelContent>
                                <ChildContent>
                                    <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-m-0">@arableLand.Type</RadzenText>
                                        @arableLand.Value
                                    @arableLand.AdditionalValue
                                </ChildContent>
                            </RadzenTimelineItem>
                        }
                    </Items>
                </RadzenTimeline>
            </RadzenCard>
        </RadzenCardGroup>
}


@code {
    [Inject]
    public IReportService ReportService { get; set; } = default!;

    public TimelineComparisonReportModel Data { get; set; }

    IEnumerable<int> values = new int[] { 1 };

    string value = "";

    protected override async Task OnInitializedAsync()
    {
        Data = await ReportService.GetTimelineComparisonReport();
    }

    class MyObject
    {
        public int Id { get; set; }
        public string Name { get; set; }

        public override bool Equals(object o)
        {
            var other = o as MyObject;

            return other?.Id == Id;
        }

        public override string ToString()
        {
            return $"Година: {Id}, Земя: {Name}";
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }
    }

    MyObject singleValue = new MyObject() { Id = 5, Name = "Земя 2131" };
    IEnumerable<MyObject> data = Enumerable.Range(0, 100).Select(i => new MyObject() { Id = i, Name = $"Name{i}" });
}